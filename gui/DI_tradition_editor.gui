### Tradition Editor Window ###

window = {
	name = "DI_tradition_editor_window"
	parentanchor = center
	size = { 600 950 }
	layer = windows_layer

	using = Window_Background
	using = Window_Decoration
	
	datacontext = "[GetVariableSystem]"
	datacontext = "[GetPlayer]"
	datacontext = "[GetPlayer.MakeScope.Var('DI_innovation_selected_culture').Culture]"

	state = {
		name = _show
		using = Animation_FadeIn_Quick

		on_start = "[GetVariableSystem.Set('DI_tradition_editor_window_tab', 'realm')]"
		on_finish = "[PdxGuiWidget.StackTop]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
	}

	visible = "[GetVariableSystem.Exists('DI_tradition_editor_window_visible')]"
	
	vbox = {
		using = Window_Margins
		minimumsize = { 600 0 }

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "[SelectLocalization(GetVariableSystem.HasValue('reformation_mode', 'show'), 'REPLACE_TRADITION_WINDOW_TITLE', 'ADD_TRADITION_WINDOW_TITLE')]"
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Toggle('DI_tradition_editor_window_visible')]"
			}
		}

		# vbox = {
		# 	layoutpolicy_horizontal = expanding
		# 	margin = { 4 0 }

		# 	hbox = {
		# 		layoutpolicy_horizontal = expanding
		# 		margin_bottom = -4

		# 		# The parameter for GetTraditionGrouping should match the categories in the traditions script
		# 		button_tab = {
		# 			layoutpolicy_horizontal = expanding
		# 			onclick = "[GetVariableSystem.Set('DI_tradition_editor_window_tab', 'realm')]"
		# 			down = "[GetVariableSystem.HasValue('DI_tradition_editor_window_tab', 'realm')]"

		# 			hbox = {
		# 				text_single = {
		# 					layoutpolicy_horizontal = expanding
		# 					align = center
		# 					text = "REALM"
		# 					default_format = "#low"
		# 				}
		# 			}
		# 		}
		# 		button_tab = {
		# 			layoutpolicy_horizontal = expanding
		# 			onclick = "[GetVariableSystem.Set('DI_tradition_editor_window_tab', 'combat')]"
		# 			down = "[GetVariableSystem.HasValue('DI_tradition_editor_window_tab', 'combat')]"

		# 			hbox = {
		# 				text_single = {
		# 					layoutpolicy_horizontal = expanding
		# 					align = center
		# 					text = "COMBAT"
		# 					default_format = "#low"
		# 				}
		# 			}
		# 		}
		# 		button_tab = {
		# 			layoutpolicy_horizontal = expanding
		# 			onclick = "[GetVariableSystem.Set('DI_tradition_editor_window_tab', 'societal')]"
		# 			down = "[GetVariableSystem.HasValue('DI_tradition_editor_window_tab', 'societal')]"

		# 			hbox = {
		# 				text_single = {
		# 					layoutpolicy_horizontal = expanding
		# 					align = center
		# 					text = "SOCIETAL"
		# 					default_format = "#low"
		# 				}
		# 			}
		# 		}
		# 	}

		# 	hbox = {
		# 		layoutpolicy_horizontal = expanding
		# 		margin_bottom = 5

		# 		button_tab = {
		# 			layoutpolicy_horizontal = expanding
		# 			onclick = "[GetVariableSystem.Set('DI_tradition_editor_window_tab', 'ritual')]"
		# 			down = "[GetVariableSystem.HasValue('DI_tradition_editor_window_tab', 'ritual')]"

		# 			hbox = {
		# 				text_single = {
		# 					layoutpolicy_horizontal = expanding
		# 					align = center
		# 					text = "RITUAL"
		# 					default_format = "#low"
		# 				}
		# 			}
		# 		}
		# 		button_tab = {
		# 			layoutpolicy_horizontal = expanding
		# 			onclick = "[GetVariableSystem.Set('DI_tradition_editor_window_tab', 'regional')]"
		# 			down = "[GetVariableSystem.HasValue('DI_tradition_editor_window_tab', 'regional')]"

		# 			hbox = {
		# 				text_single = {
		# 					layoutpolicy_horizontal = expanding
		# 					align = center
		# 					text = "REGIONAL"
		# 					default_format = "#low"
		# 				}
		# 			}
		# 		}
		# 	}
		# }

		vbox = {
			name = "DI_tradition_selection"
			margin = { 0 8 }
			spacing = 6

			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			scrollbox = {
				name = "DI_traditions_realm_scrollbox"
				visible = "[GetVariableSystem.HasValue('DI_tradition_editor_window_tab', 'realm')]"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_content"
				{
					fixedgridbox = {
						datamodel = "[GetAllCultureTraditions]"
						flipdirection = yes
						addcolumn = 240
						addrow = 160
						datamodel_wrap = 2
	
						item = {
							DI_widget_tradition_item = {}	
						}
					}
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 44 8 }
				spacing = 20

				button_standard = {
					name = "clear_traditions"
					text = DI_CLEAR_ALL_TRADITIONS

					onclick = "[GetScriptedGui('DI_clear_all_traditions').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				}

				# button_standard = {
				# 	name = "DI_all_traditions"
				# 	text = DI_all_traditions

				# 	onclick = "[GetScriptedGui('DI_set_tradition').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('tradition', GetCultureTradition('tradition_winter_warriors').MakeScope).End)]"
				# }
			}
		}
	}
}

types DI_CultureAddTraditionTypes
{
	type DI_widget_tradition_item = widget {
		size = {  240 160  }

		tooltipwidget = {
			using = culture_tradition_tooltip_clickable
		}

		vbox = {
			visible = "[CultureTradition.IsValid]"
			button_standard = {
				size = {  220 120  }
				onclick = "[GetVariableSystem.Set( 'DI_selected_tradition' , CultureTradition.Self )]"
				onclick = "[GetScriptedGui('DI_set_tradition').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('tradition', CultureTradition.MakeScope).End)]"
				onrightclick = "[GetScriptedGui('DI_remove_tradition').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('tradition', CultureTradition.MakeScope).End)]"
				button_ignore = none

				widget_tradition_icon = {
					block "icon_size" {
						size = { 220 120 }
					}
				}

				icon = {
					name = "selection_glow"
					visible = "[ObjectsEqual( VariableSystem.Get(' DI_selected_tradition ') , CultureTradition.Self )]"
					parentanchor = center
					size = { 100% 100% }

					state = {
						trigger_on_create = yes

						name = max_glow
						next = min_glow
						duration = 1
						using = Animation_Curve_Default
						alpha = 0.5
					}

					state = {
						name = min_glow
						next = max_glow
						duration = 1.6
						using = Animation_Curve_Default
						alpha = 0.3
					}

					background = {
						texture = "gfx/interface/component_effects/innovation_glow.dds"
						margin = { 14 12 }
						spriteType = Corneredstretched
						spriteborder = { 30 30 }
						tintcolor = { 1 0.8 0.6 1 }
					}
				}
			}

			hbox = {
				margin_top = 4

				text_label_center = {
					name = "name"
					text = "[CultureTradition.GetNameNoTooltip]"
					maximumsize = { 180 44 }
					multiline = yes
					align = center|nobaseline

					using = Font_Size_Medium
				}
			}
		}
	}
}